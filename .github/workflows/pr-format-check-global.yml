name: Reusable PR Format Check

on:
  workflow_call:
    inputs:
      allowedPrefixes:
        description: 'Allowed branch prefixes'
        required: false
        default: 'feature,bugfix,hotfix'
        type: string

jobs:
  pr-format-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate PR Title and Branch
        if: github.event_name == 'pull_request'
        run: |
          echo "Checking PR title and branch format..."
          
          PR_TITLE="${{ github.event.pull_request.title }}"
          BRANCH_NAME="${{ github.head_ref }}"
          PREFIXES="${{ inputs.allowedPrefixes }}"
          
          echo "PR title: $PR_TITLE"
          echo "Branch: $BRANCH_NAME"

          # Check PR title format: [#number] Some title
          if ! [[ "$PR_TITLE" =~ ^\[#([0-9]+)\]\ .+ ]]; then
            echo "❌ PR title does not match '[#IssueNumber] Descriptive Title' format"
            exit 1
          fi

          # Check PR body includes valid issue-closing keywords
        - name: Validate PR body includes issue reference
          run: |
            PR_BODY="${{ github.event.pull_request.body }}"

            # Regex que acepta todas las palabras clave válidas de GitHub
            REGEX='(close|closes|closed|fix|fixes|resolve|resolves)[[:space:]]*#[0-9]+'

            if ! [[ "$PR_BODY" =~ $REGEX ]]; then
              echo "❌ PR body must include a valid issue-closing reference, e.g. 'Closes #123', 'Fixes #45', or 'Resolves #7'"
              exit 1
            else
              echo "✅ PR body contains a valid issue-closing reference."
            fi

          # Check branch prefix
          BRANCH_PREFIX=$(echo "$BRANCH_NAME" | cut -d'/' -f1)
          if ! [[ ",$PREFIXES," == *",$BRANCH_PREFIX,"* ]]; then
            echo "❌ Branch prefix '$BRANCH_PREFIX' is not allowed. Use one of: $PREFIXES"
            exit 1
          fi

          echo "✅ PR format is correct!"
